---
page_title: "{{.ProviderShortName}} Provider"
subcategory: ""
description: |-
  AppDynamicsCloud Provider provides resources to interact with AppDynamics Cloud Platform services.
---

# {{.ProviderShortName}} Provider
{{ .Description | trimspace }}

AppDynamics drives business outcomes by putting application health in the context of your business, while providing unparalleled observability across tools, services and infrastructure on the backend.

The AppDynamicsCloud provider is used to interact with the [AppDynamics Cloud Platform](https://www.appdynamics.com/). It offers resources that make it possible to create and manage Cloud Connections, Configuration, Service Principals and querying all observation data using the Unified Query Language (UQL).

~> **Note:** Service Principals cannot be managed by the credentials
of another service principal. you need to sign in through your user credentials
by login mode browser or headless to use this resource.

~> **Note:** If you rotate and revoke secret at the same time, it will first perform
the revoke operation and then rotate it.

{{ if .HasExample -}}
## Example Usage
{{ tffile "examples/provider/provider.tf" }}
{{- end }}

<!-- schema generated by tfplugindocs -->
## Schema

### Required

- `login_mode` (String) Mode of login. Possible values are: service_principal, browser and headless. This can also be set as the APPDYNAMICS_LOGIN_MODE environment variable.
- `tenant_name` (String) Tenant name of the AppDynamics Platform. This can also be set as the APPDYNAMICS_TENANT_NAME environment variable.

### Optional

- `client_id` (String) ClientID of the AppDynamics API Client, this can also be set as the APPDYNAMICS_CLIENT_ID environment variable. To be used with login mode service_principal.
- `client_secret` (String, Sensitive) ClientSecret of the AppDynamics API Client. This can also be set as the APPDYNAMICS_CLIENT_SECRET environment variable. To be used with login mode service_principal.
- `password` (String) Password to login to the AppDynamics Platform. This can also be set as the APPDYNAMICS_PASSWORD environment variable. To be used with login mode headless.
- `save_token` (Boolean) Whether or not to store the access token acquired by login mode browser and headless. This is for convenience and if you store the token, it would not prompt you to login again until it expires. This can also be set as the APPDYNAMICS_SAVE_TOKEN environment variable.
- `username` (String) Username to login to the AppDynamics Platform. This can also be set as the APPDYNAMICS_USERNAME environment variable. To be used with login mode headless.

### Attribute Reference:

| Login Mode          | Required Attributes                  |
| ------------------- | ------------------------------------ | 
| `service_principal` | `client_id`, `client_secret`         |
| `headless`          | `save_token`, `username`, `password` |
| `browser`           | `save_token`                         |

~> **Note:** Using the login mode browser requires the Chrome browser to be installed, and it should work on any OS with a desktop environment. You can use headless mode if your platform lacks a desktop environment. However, the 'google-chrome-stable' package must be installed. Depending on your operating system, you can install the package by following blog posts [like this](https://geekflare.com/install-chromium-ubuntu-centos/).

## Community, Issues and Enhancement Requests

* [AppDynamics Discuss: ](https://community.appdynamics.com/t5/Forums/ct-p/Discussions) .  
Communities provide a place for members or participants to search for information, read and post about topics of interest, and learn from each other. Here you'll find:
  * boards where you can post questions and answers
  * blogs where you can read and comment on articles
  * idea exchanges where you can suggest ways to improve products and vote for ideas that other community members have posted
  * knowledge base - a collection of articles that captures and organizes helpful community information. 

* [Issues or Enhancement requests: ](https://TODO)  
Issues and Enhancement requests can be submitted on GitHub repo's issues tab of the repository. Please search if the existing issues resolves your problem before posting a new issue.


### Reporting Issues:
Please include a detailed log and a minimal example of the terraform config to reproduce the issue. You can enable the logs by using `export TF_LOG=TRACE`. This will output the logs on the stdout, you can optionally redirect the logs to a file by using `export TF_LOG_PATH=./terraform.log`. You can set the path and filename as per your convenience. You can refer to [this link](https://developer.hashicorp.com/terraform/internals/debugging) for more info.